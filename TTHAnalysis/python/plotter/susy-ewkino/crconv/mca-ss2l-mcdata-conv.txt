ttZ   : TTZToLLNuNu              : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge; FillColor=ROOT.kGreen-6, Label="ttZ/G* (internal)"
ttZ   : TTLLJets_m1to10             : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge; FillColor=ROOT.kGreen-6, Label="ttZ/G* (internal)"
ttZ   : TTJets_DiLepton_part1+TTJets_DiLepton_part2             : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge; FillColor=ROOT.kGreen-6, Label="ttZ/G* (internal)"
ttZ   : TTJets_SingleLeptonFromT_part1+TTJets_SingleLeptonFromT_part2+TTJets_SingleLeptonFromT_part3    : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge; FillColor=ROOT.kGreen-6, Label="ttZ/G* (internal)"
ttZ   : TTJets_SingleLeptonFromTbar : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge; FillColor=ROOT.kGreen-6, Label="ttZ/G* (internal)"

Gstar : DYJetsToLL_M10to50_LO : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge ; FillColor=ROOT.kCyan+1, Label="ZG* (internal)" 
Gstar : DYJetsToLL_M50_LO     : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge ; FillColor=ROOT.kCyan+1, Label="ZG* (internal)"
Gstar : ZZTo4L_part1+ZZTo4L_part2   : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge ;  FillColor=ROOT.kCyan+1,  Label="ZG* (internal)"

WZ    : WZTo3LNu : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge ; FillColor=ROOT.kOrange

TTG : TTGJets  : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==1) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==1) ) ; FillColor=ROOT.kOrange-1, Label="TTG (external)"
WG :  WGToLNuG : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==1) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==1) ) ; FillColor=ROOT.kOrange-3, Label="WG (external)"
ZG :  ZGTo2LG  : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==1) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==1) ) ; FillColor=ROOT.kOrange-2, Label="ZG (external)"
TG :  TGJets   : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==1) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==1) ) ; FillColor=ROOT.kOrange-4, Label="TG (external)"

Fakes : TTJets_DiLepton_part1+TTJets_DiLepton_part2             : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray
Fakes : TTJets_SingleLeptonFromT_part1+TTJets_SingleLeptonFromT_part2+TTJets_SingleLeptonFromT_part3    : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray
#Fakes : TTJets_SingleLeptonFromTbar : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray
Fakes : DYJetsToLL_M10to50_LO          : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray
Fakes : DYJetsToLL_M50_LO              : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray
Fakes : WJetsToLNu_LO                  : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray
###Fakes : TToLeptons_tch_powheg      : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray
###Fakes : TToLeptons_sch              : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray
###Fakes : T_tWch                      : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray
###Fakes : TBar_tWch                   : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray
Fakes : T_tch_powheg                  : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray
Fakes : TBar_tch_powheg               : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray
#Fakes : WWTo2L2Nu                   : xsec : ((LepGood1_mcMatchId==0 && LepGood1_mcPromptGamma==0) || (LepGood2_mcMatchId==0 && LepGood2_mcPromptGamma==0) ) ; FillColor=ROOT.kGray

Rares : WpWpJJ : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge ; FillColor=ROOT.kGreen+2
Rares : WW2L2NuDouble : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge ; FillColor=ROOT.kViolet+1
#Rares: WWZ       : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge ; FillColor=ROOT.kViolet+1
Rares : WZZ      : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge ; FillColor=ROOT.kViolet+1
#Rares: ZZZ       : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge ; FillColor=ROOT.kViolet+1
Rares : TTTT     : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge ; FillColor=ROOT.kViolet+1
Rares : tZq_ll   : xsec : LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge ; FillColor=ROOT.kViolet+1

Flips : TTJets_DiLepton_part1+TTJets_DiLepton_part2    : xsec : (LepGood1_mcMatchId!=0 && LepGood2_mcMatchId!=0 && !(LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge)) ; Label="Flips", FillColor=ROOT.kCyan-10
Flips : DYJetsToLL_M10to50_LO : xsec : (LepGood1_mcMatchId!=0 && LepGood2_mcMatchId!=0 && !(LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge)) ; Label="Flips", FillColor=ROOT.kCyan-10
Flips : DYJetsToLL_M50_LO     : xsec : (LepGood1_mcMatchId!=0 && LepGood2_mcMatchId!=0 && !(LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge)) ; Label="Flips", FillColor=ROOT.kCyan-10
###Flips : T_tWch             : xsec : (LepGood1_mcMatchId!=0 && LepGood2_mcMatchId!=0 && !(LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge)) ; Label="Flips", FillColor=ROOT.kCyan-10
###Flips : TBar_tWch          : xsec : (LepGood1_mcMatchId!=0 && LepGood2_mcMatchId!=0 && !(LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge)) ; Label="Flips", FillColor=ROOT.kCyan-10
Flips : T_tch_powheg          : xsec : (LepGood1_mcMatchId!=0 && LepGood2_mcMatchId!=0 && !(LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge)) ; Label="Flips", FillColor=ROOT.kCyan-10
Flips : TBar_tch_powheg       : xsec : (LepGood1_mcMatchId!=0 && LepGood2_mcMatchId!=0 && !(LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge)) ; Label="Flips", FillColor=ROOT.kCyan-10
Flips : WWTo2L2Nu          : xsec : (LepGood1_mcMatchId!=0 && LepGood2_mcMatchId!=0 && !(LepGood1_isMatchRightCharge && LepGood2_isMatchRightCharge)) ; Label="Flips", FillColor=ROOT.kCyan-10


## DATA (Moriond)
## -----------------------------------------------------------
data : DoubleEG_Run2016B_23Sep2016_v3_runs_273150_275376_part1        ; Label="data"
data : DoubleEG_Run2016B_23Sep2016_v3_runs_273150_275376_part2        ; Label="data"
data : DoubleEG_Run2016C_23Sep2016_v1_runs_271036_284044        ; Label="data"
data : DoubleEG_Run2016D_23Sep2016_v1_runs_271036_284044        ; Label="data"
data : DoubleEG_Run2016E_23Sep2016_v1_runs_271036_284044        ; Label="data"
data : DoubleEG_Run2016F_23Sep2016_v1_runs_271036_284044        ; Label="data"
data : DoubleEG_Run2016G_23Sep2016_v1_runs_271036_284044_part1        ; Label="data"
data : DoubleEG_Run2016G_23Sep2016_v1_runs_271036_284044_part2        ; Label="data"
data : DoubleEG_Run2016H-PromptReco-v2_runs_281207_284035_part1       ; Label="data"
data : DoubleEG_Run2016H-PromptReco-v2_runs_281207_284035_part2       ; Label="data"
data : DoubleEG_Run2016H-PromptReco-v3_runs_284036_284044       ; Label="data"
data : DoubleMuon_Run2016B_23Sep2016_v3_runs_273150_275376_part1      ; Label="data"
data : DoubleMuon_Run2016B_23Sep2016_v3_runs_273150_275376_part2      ; Label="data"
data : DoubleMuon_Run2016C_23Sep2016_v1_runs_271036_284044      ; Label="data"
data : DoubleMuon_Run2016D_23Sep2016_v1_runs_271036_284044_part1      ; Label="data"
data : DoubleMuon_Run2016D_23Sep2016_v1_runs_271036_284044_part2      ; Label="data"
data : DoubleMuon_Run2016E_23Sep2016_v1_runs_271036_284044_part1      ; Label="data"
data : DoubleMuon_Run2016E_23Sep2016_v1_runs_271036_284044_part2      ; Label="data"
data : DoubleMuon_Run2016F_23Sep2016_v1_runs_271036_284044      ; Label="data"
data : DoubleMuon_Run2016G_23Sep2016_v1_runs_271036_284044_part1      ; Label="data"
data : DoubleMuon_Run2016G_23Sep2016_v1_runs_271036_284044_part2      ; Label="data"
data : DoubleMuon_Run2016G_23Sep2016_v1_runs_271036_284044_part3      ; Label="data"
data : DoubleMuon_Run2016H-PromptReco-v2_runs_281207_284035_part1     ; Label="data"
data : DoubleMuon_Run2016H-PromptReco-v2_runs_281207_284035_part2     ; Label="data"
data : DoubleMuon_Run2016H-PromptReco-v2_runs_281207_284035_part3     ; Label="data"
data : DoubleMuon_Run2016H-PromptReco-v3_runs_284036_284044     ; Label="data"
data : MuonEG_Run2016B_23Sep2016_v3_runs_273150_275376          ; Label="data"
data : MuonEG_Run2016C_23Sep2016_v1_runs_271036_284044          ; Label="data"
data : MuonEG_Run2016D_23Sep2016_v1_runs_271036_284044          ; Label="data"
data : MuonEG_Run2016E_23Sep2016_v1_runs_271036_284044          ; Label="data"
data : MuonEG_Run2016F_23Sep2016_v1_runs_271036_284044          ; Label="data"
data : MuonEG_Run2016G_23Sep2016_v1_runs_271036_284044          ; Label="data"
data : MuonEG_Run2016H-PromptReco-v2_runs_281207_284035         ; Label="data"
data : MuonEG_Run2016H-PromptReco-v3_runs_284036_284044         ; Label="data"
data : SingleElectron_Run2016B_23Sep2016_v3_runs_273150_275376  ; Label="data"
data : SingleElectron_Run2016C_23Sep2016_v1_runs_271036_284044  ; Label="data"
data : SingleElectron_Run2016D_23Sep2016_v1_runs_271036_284044  ; Label="data"
data : SingleElectron_Run2016E_23Sep2016_v1_runs_271036_284044  ; Label="data"
data : SingleElectron_Run2016F_23Sep2016_v1_runs_271036_284044  ; Label="data"
data : SingleElectron_Run2016G_23Sep2016_v1_runs_271036_284044  ; Label="data"
data : SingleElectron_Run2016H-PromptReco-v2_runs_281207_284035 ; Label="data"
data : SingleElectron_Run2016H-PromptReco-v3_runs_284036_284044 ; Label="data"
data : SingleMuon_Run2016B_23Sep2016_v3_runs_273150_275376      ; Label="data"
data : SingleMuon_Run2016C_23Sep2016_v1_runs_271036_284044      ; Label="data"
data : SingleMuon_Run2016D_23Sep2016_v1_runs_271036_284044      ; Label="data"
data : SingleMuon_Run2016E_23Sep2016_v1_runs_271036_284044      ; Label="data"
data : SingleMuon_Run2016F_23Sep2016_v1_runs_271036_284044      ; Label="data"
data : SingleMuon_Run2016G_23Sep2016_v1_runs_271036_284044      ; Label="data"
data : SingleMuon_Run2016H-PromptReco-v2_runs_281207_284035     ; Label="data"
data : SingleMuon_Run2016H-PromptReco-v3_runs_284036_284044     ; Label="data"


